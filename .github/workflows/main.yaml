name: Terraform Plan

on: workflow_dispatch

# env:
#   TF_VAR_app: ${{ secrets.APP_NAME }}

permissions:
    id-token: write
    contents: read

jobs: 
  work_locally: 
    runs-on: ubuntu-latest
    name: Terraform Apply Cycle
    env:
      TF_VAR_app: ${{ secrets.APP_NAME }}

    steps:

    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show
    
    - name: List env
      run: |
        TERRAFORM_VARIABLES=$(env | grep -e '^TF_VAR_')
        echo $TERRAFORM_VARIABLES

    # - name: 'Create Terraform Secrets tfvars File'
    #   run: |
    #     TERRAFORM_SECRET_VARIABLES=$(env | grep -e '^TF_VAR_')
    #     touch secrets.tfvars
    #     cat > secrets.tfvars << EOF
    #     $TERRAFORM_SECRET_VARIABLES
    #     EOF
    #   working-directory: terraform

    # - uses: actions/upload-artifact@v4
    #   with:
    #     name: secrets
    #     path: terraform/secrets.tfvars

    # - name: Create empty secrets file if doesn't exist
    #   run: |
    #     if ! test -f secrets.tfvars; then
    #       echo "secrets.tfvars does not exist. Creating..."
    #       touch secrets.tfvars
    #     fi
    #   working-directory: terraform

  use_reusable_tf:
    uses: AnnaxGrace/Reusable-TF-WF/.github/workflows/main.yaml@main
    needs: work_locally
    secrets:
      TF_vars: |
        app=${{ secrets.APP_NAME }}
        test="here"


    # - name: 'Plan Run'
    #   run: |
    #     terraform init
    #     terraform plan -input=false -var-file=./secrets.tfvars
    #   working-directory: terraform

    # - name: 'Apply Run'
    #   run: |
    #     terraform apply -auto-approve -input=false -var-file=./secrets.tfvars
    #   working-directory: terraform




